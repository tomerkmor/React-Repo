{"ast":null,"code":"import { createStore } from \"redux\";\nimport { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  counter: 0,\n  showCounter: true\n};\nconst counterSlice = createSlice({\n  name: \"counter\",\n  initialState: initialState,\n  reducers: {\n    // here we can work as usual, and the code will not manipulate the existing state\n    increment(state) {\n      state.counter++;\n    },\n    decrement(state) {\n      state.counter--;\n    },\n    increase(state, action) {\n      state.counter = state.counter + action.amount;\n    },\n    reset(state) {\n      state.counter = 0;\n    },\n    toggleCounter(state) {\n      state.showCounter = !state.showCounter;\n    }\n  }\n});\n\n// \nconst counterReducer = (state = initialState, action) => {\n  if (action.type === \"increment\") {\n    return {\n      counter: state.counter + 1,\n      showCounter: state.showCounter\n    };\n  }\n  if (action.type === \"decrement\") {\n    return {\n      counter: state.counter - 1,\n      showCounter: state.showCounter\n    };\n  }\n  if (action.type === \"increase\") {\n    return {\n      counter: state.counter + action.amount,\n      showCounter: state.showCounter\n    };\n  }\n  if (action.type === \"reset\") {\n    return {\n      counter: 0,\n      showCounter: state.showCounter\n    };\n  }\n  if (action.type === \"toggle\") {\n    return {\n      counter: state.counter,\n      showCounter: !state.showCounter\n    };\n  }\n  return state;\n};\nconst store = createStore(counterReducer);\n\n//connect the react-app to the redux-store\nexport default store;","map":{"version":3,"names":["createStore","createSlice","initialState","counter","showCounter","counterSlice","name","reducers","increment","state","decrement","increase","action","amount","reset","toggleCounter","counterReducer","type","store"],"sources":["C:/Users/sexyl/OneDrive/Desktop/A/udemy-react/udemy-final projects/11 - Redux basics/src/store/index.js"],"sourcesContent":["import { createStore } from \"redux\";\r\nimport { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = { counter: 0, showCounter: true };\r\nconst counterSlice = createSlice({\r\n  name: \"counter\",\r\n  initialState: initialState,\r\n  reducers: {\r\n    // here we can work as usual, and the code will not manipulate the existing state\r\n    increment(state) {\r\n      state.counter++\r\n    },\r\n    decrement(state) {\r\n      state.counter--\r\n    },\r\n    increase(state, action) {\r\n      state.counter = state.counter + action.amount\r\n    },\r\n    reset(state){\r\n      state.counter = 0\r\n    },\r\n    toggleCounter(state) {\r\n      state.showCounter = !state.showCounter\r\n    },\r\n  },\r\n});\r\n\r\n// \r\nconst counterReducer = (state = initialState, action) => {\r\n  if (action.type === \"increment\") {\r\n    return {\r\n      counter: state.counter + 1,\r\n      showCounter: state.showCounter,\r\n    };\r\n  }\r\n\r\n  if (action.type === \"decrement\") {\r\n    return {\r\n      counter: state.counter - 1,\r\n      showCounter: state.showCounter,\r\n    };\r\n  }\r\n\r\n  if (action.type === \"increase\") {\r\n    return {\r\n      counter: state.counter + action.amount,\r\n      showCounter: state.showCounter,\r\n    };\r\n  }\r\n\r\n  if (action.type === \"reset\") {\r\n    return {\r\n      counter: 0,\r\n      showCounter: state.showCounter,\r\n    };\r\n  }\r\n\r\n  if (action.type === \"toggle\") {\r\n    return {\r\n      counter: state.counter,\r\n      showCounter: !state.showCounter,\r\n    };\r\n  }\r\n  return state;\r\n};\r\n\r\nconst store = createStore(counterReducer);\r\n\r\n//connect the react-app to the redux-store\r\nexport default store;\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,OAAO;AACnC,SAASC,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,YAAY,GAAG;EAAEC,OAAO,EAAE,CAAC;EAAEC,WAAW,EAAE;AAAK,CAAC;AACtD,MAAMC,YAAY,GAAGJ,WAAW,CAAC;EAC/BK,IAAI,EAAE,SAAS;EACfJ,YAAY,EAAEA,YAAY;EAC1BK,QAAQ,EAAE;IACR;IACAC,SAASA,CAACC,KAAK,EAAE;MACfA,KAAK,CAACN,OAAO,EAAE;IACjB,CAAC;IACDO,SAASA,CAACD,KAAK,EAAE;MACfA,KAAK,CAACN,OAAO,EAAE;IACjB,CAAC;IACDQ,QAAQA,CAACF,KAAK,EAAEG,MAAM,EAAE;MACtBH,KAAK,CAACN,OAAO,GAAGM,KAAK,CAACN,OAAO,GAAGS,MAAM,CAACC,MAAM;IAC/C,CAAC;IACDC,KAAKA,CAACL,KAAK,EAAC;MACVA,KAAK,CAACN,OAAO,GAAG,CAAC;IACnB,CAAC;IACDY,aAAaA,CAACN,KAAK,EAAE;MACnBA,KAAK,CAACL,WAAW,GAAG,CAACK,KAAK,CAACL,WAAW;IACxC;EACF;AACF,CAAC,CAAC;;AAEF;AACA,MAAMY,cAAc,GAAGA,CAACP,KAAK,GAAGP,YAAY,EAAEU,MAAM,KAAK;EACvD,IAAIA,MAAM,CAACK,IAAI,KAAK,WAAW,EAAE;IAC/B,OAAO;MACLd,OAAO,EAAEM,KAAK,CAACN,OAAO,GAAG,CAAC;MAC1BC,WAAW,EAAEK,KAAK,CAACL;IACrB,CAAC;EACH;EAEA,IAAIQ,MAAM,CAACK,IAAI,KAAK,WAAW,EAAE;IAC/B,OAAO;MACLd,OAAO,EAAEM,KAAK,CAACN,OAAO,GAAG,CAAC;MAC1BC,WAAW,EAAEK,KAAK,CAACL;IACrB,CAAC;EACH;EAEA,IAAIQ,MAAM,CAACK,IAAI,KAAK,UAAU,EAAE;IAC9B,OAAO;MACLd,OAAO,EAAEM,KAAK,CAACN,OAAO,GAAGS,MAAM,CAACC,MAAM;MACtCT,WAAW,EAAEK,KAAK,CAACL;IACrB,CAAC;EACH;EAEA,IAAIQ,MAAM,CAACK,IAAI,KAAK,OAAO,EAAE;IAC3B,OAAO;MACLd,OAAO,EAAE,CAAC;MACVC,WAAW,EAAEK,KAAK,CAACL;IACrB,CAAC;EACH;EAEA,IAAIQ,MAAM,CAACK,IAAI,KAAK,QAAQ,EAAE;IAC5B,OAAO;MACLd,OAAO,EAAEM,KAAK,CAACN,OAAO;MACtBC,WAAW,EAAE,CAACK,KAAK,CAACL;IACtB,CAAC;EACH;EACA,OAAOK,KAAK;AACd,CAAC;AAED,MAAMS,KAAK,GAAGlB,WAAW,CAACgB,cAAc,CAAC;;AAEzC;AACA,eAAeE,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}